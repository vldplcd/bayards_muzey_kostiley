<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AgrmntLabel" xml:space="preserve">
    <value>User agreement</value>
  </data>
  <data name="ContinueButton" xml:space="preserve">
    <value>I agree</value>
  </data>
  <data name="DownloadWarn" xml:space="preserve">
    <value>The information has been updated. Now the app will use the internet connection to download new data. Please be aware that there may be a charge for data transfer over the mobile network.</value>
  </data>
  <data name="EnButton" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="IncPassword" xml:space="preserve">
    <value>The password is incorrect</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>eng</value>
  </data>
  <data name="LocaleLabel" xml:space="preserve">
    <value>Please choose the language below</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="NlButton" xml:space="preserve">
    <value>Dutch</value>
  </data>
  <data name="PasswLabel" xml:space="preserve">
    <value>Enter your password</value>
  </data>
  <data name="Risk" xml:space="preserve">
    <value>Risks</value>
  </data>
  <data name="s" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Task" xml:space="preserve">
    <value>Tasks</value>
  </data>
  <data name="UserAgreementText" xml:space="preserve">
    <value>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis vitae justo et quam bibendum elementum non eget nibh. Nam elementum risus eget libero cursus cursus. Morbi ut lacus non lacus auctor ultricies vitae sit amet urna. Sed vehicula facilisis lectus,
                        ut imperdiet nisl cursus sit amet. Quisque scelerisque 
                        pharetra blandit. Nulla at ante porttitor, molestie dolor et, 
                        placerat odio. Nulla auctor porttitor lacinia. Integer 
                        vulputate maximus lorem a feugiat. Nam vel volutpat felis. Nulla facilisi.
                        Mauris tincidunt justo non elit porta maximus. Phasellus ac velit accumsan, ultricies risus vel, lacinia elit.Fusce rhoncus purus at quam ornare, imperdiet lacinia dui placerat. Etiam sit amet est cursus, dignissim libero sed, tincidunt nunc. Aliquam maximus, elit et lacinia viverra, sapien odio elementum tortor, a mattis diam diam sed risus. Proin rhoncus consequat est. Donec vel efficitur nisi. Nam tincidunt nunc lectus, et venenatis massa ullamcorper in. Morbi quis neque placerat urna gravida porta quis ac purus. Donec ac nibh non risus viverra semper. Nullam sapien sapien, commodo nec dolor vitae, congue aliquam sem. Morbi a metus nec turpis tristique vestibulum. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam orci orci, interdum sed arcu vel, ornare vestibulum arcu. Praesent vehicula ligula nec libero tristique, ut interdum metus vestibulum. Pellentesque suscipit ornare erat sit amet ultrices. Aenean nisi eros, accumsan sed lectus et, bibendum vulputate massa. Nullam dignissim mi eros, eget varius diam consequat ut.</value>
  </data>
  <data name="HideImages" xml:space="preserve">
    <value>Hide Images</value>
  </data>
  <data name="HideVideo" xml:space="preserve">
    <value>Hide Video</value>
  </data>
  <data name="ShowImages" xml:space="preserve">
    <value>Show Images</value>
  </data>
  <data name="ShowVideo" xml:space="preserve">
    <value>Show Video</value>
  </data>
</root>